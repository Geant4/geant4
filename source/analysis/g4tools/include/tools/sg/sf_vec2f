// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file tools.license for terms.

#ifndef tools_sg_sf_vec2f
#define tools_sg_sf_vec2f

#include "sf_vec"

#include "../lina/vec2f"
#include "../HEADER"

namespace tools {
namespace sg {

class sf_vec2f : public sf_vec<vec2f,float> {
  typedef sf_vec<vec2f,float> _parent;
  TOOLS_HEADER(sf_vec2f,tools::sg::sf_vec2f,_parent)
public:
  sf_vec2f():parent(){}
  sf_vec2f(const vec2f& a_v):parent(a_v){}
  virtual ~sf_vec2f(){}
public:
  sf_vec2f(const sf_vec2f& a_from):parent(a_from){}
  sf_vec2f& operator=(const sf_vec2f& a_from){
    parent::operator=(a_from);
    return *this;
  }
public:
  sf_vec2f& operator+=(const vec2f& a_value) {parent::operator+=(a_value);return *this;}
public: //for iv2sg
  void setValue(const vec2f& a_v) {value(a_v);}
  void setValue(float a_0,float a_1) {value(vec2f(a_0,a_1));}
};

}}

#endif
