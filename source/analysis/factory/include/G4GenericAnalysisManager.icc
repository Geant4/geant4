//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//

#include "G4GenericFileManager.hh"
#include "G4AutoLock.hh"

//_____________________________________________________________________________
inline std::shared_ptr<G4VFileManager> G4GenericAnalysisManager::GetFileManager(
  const G4String& fileName)
{
  return fFileManager->GetFileManager(fileName);
}

//_____________________________________________________________________________
inline void G4GenericAnalysisManager::SetNtupleMerging(
  G4bool mergeNtuples, G4int nofReducedNtupleFiles)
{
  fIsNtupleMergingSet = true;
  fMergeNtuples = mergeNtuples;
  fNofNtupleFiles = nofReducedNtupleFiles;
}

//_____________________________________________________________________________
inline void G4GenericAnalysisManager::SetNtupleRowWise(
  G4bool rowWise, G4bool rowMode)
{
  fNtupleRowWise = rowWise;
  fNtupleRowMode = rowMode;
}

//_____________________________________________________________________________
inline void G4GenericAnalysisManager::SetBasketSize(
  unsigned int basketSize)
{
  fBasketSize = basketSize;
}

//_____________________________________________________________________________
inline void G4GenericAnalysisManager::SetBasketEntries(
  unsigned int basketEntries)
{
  fBasketEntries = basketEntries;
}

//_____________________________________________________________________________
inline void G4GenericAnalysisManager::SetDefaultFileType(const G4String& value)
{
  fFileManager->SetDefaultFileType(value);
}

//_____________________________________________________________________________
inline G4String G4GenericAnalysisManager::GetDefaultFileType() const
{
  return fFileManager->GetDefaultFileType();
}
