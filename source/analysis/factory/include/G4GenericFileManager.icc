//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//

#include "G4HnInformation.hh"

//_____________________________________________________________________________
inline G4String G4GenericFileManager::GetDefaultFileType() const
{
  return fDefaultFileType;
}

//_____________________________________________________________________________
template <typename HT>
inline
G4bool G4GenericFileManager::WriteTExtra(
  const G4String& fileName, HT* ht, const G4String& htName)
{
  Message(G4Analysis::kVL4, "write", "extra file",
    fileName + " with " + G4Analysis::GetHnType<HT>() + "  " + htName);

  std::shared_ptr<G4VFileManager> fileManager = GetFileManager(fileName);
  if ( ! fileManager ) {
    G4Analysis::Warn(
      "Cannot get file manager for " + fileName + " .\n" +
      "Writing " + G4Analysis::GetHnType<HT>() + " " + htName + " failed.",
      fkClass, "WriteTExtra");
    return false;
  }

  auto result = fileManager->GetHnFileManager<HT>()->WriteExtra(ht, htName, fileName);

  Message(G4Analysis::kVL1, "write", "extra file", fileName, result);

  return result;
}
