//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
//
// 

inline G4Point3D G4VMarker::GetPosition () const {
  return fPosition;
}

inline G4double G4VMarker::GetWorldSize () const {
  return fWorldSize;
}

inline G4double G4VMarker::GetWorldDiameter () const {
  return fWorldSize;
}

inline G4double G4VMarker::GetWorldRadius () const {
  return fWorldSize / 2.;
}

inline G4double G4VMarker::GetScreenSize () const {
  return fScreenSize;
}

inline G4double G4VMarker::GetScreenDiameter () const {
  return fScreenSize;
}

inline G4double G4VMarker::GetScreenRadius () const {
  return fScreenSize / 2.;
}

inline G4VMarker::FillStyle G4VMarker::GetFillStyle () const {
  return fFillStyle;
}

inline void G4VMarker::SetPosition (const G4Point3D& pos) {
  fPosition = pos;
}

inline void G4VMarker::SetDiameter (SizeType sizeType, G4double size) {
  SetSize(sizeType, size);
}

inline void G4VMarker::SetRadius (SizeType sizeType, G4double size) {
  SetSize(sizeType, 2. * size);
}

inline void G4VMarker::SetWorldSize (G4double ws) {
  fWorldSize = ws;
}

inline void G4VMarker::SetWorldDiameter (G4double wd) {
  fWorldSize = wd;
}

inline void G4VMarker::SetWorldRadius (G4double wr) {
  fWorldSize = 2. * wr;
}

inline void G4VMarker::SetScreenSize (G4double ss) {
  fWorldSize  = 0.;
  fScreenSize = ss;
}

inline void G4VMarker::SetScreenDiameter (G4double sd) {
  fWorldSize  = 0.;
  fScreenSize = sd;
}

inline void G4VMarker::SetScreenRadius (G4double scr) {
  fWorldSize  = 0.;
  fScreenSize = 2. * scr;
}

inline void G4VMarker::SetFillStyle (G4VMarker::FillStyle style) {
  fFillStyle = style;
}

inline const G4String& G4VMarker::GetInfo() const {return fInfo;}

inline void G4VMarker::SetInfo(const G4String& info) {fInfo = info;}
