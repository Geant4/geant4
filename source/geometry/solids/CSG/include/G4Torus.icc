//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// Implementation of inline methods of G4Torus
// --------------------------------------------------------------------

inline
G4double G4Torus::GetRmin() const
{
  return fRmin ;
}

inline
G4double G4Torus::GetRmax() const
{
  return fRmax ;
}

inline
G4double G4Torus::GetRtor() const
{
  return fRtor ;
}

inline
G4double G4Torus::GetSPhi() const
{
  return fSPhi ;
}

inline
G4double G4Torus::GetDPhi() const
{
  return fDPhi ;
}

inline
G4double G4Torus::GetSinStartPhi () const
{
  return std::sin(fSPhi);
}

inline
G4double G4Torus::GetCosStartPhi () const
{
  return std::cos(fSPhi);
}

inline
G4double G4Torus::GetSinEndPhi () const
{
  return std::sin(fSPhi+fDPhi);
}

inline
G4double G4Torus::GetCosEndPhi () const
{
  return std::cos(fSPhi+fDPhi);
}

inline
G4double G4Torus::GetCubicVolume()
{
  if(fCubicVolume != 0.) {;}
  else  { fCubicVolume = fDPhi*CLHEP::pi*fRtor*(fRmax*fRmax-fRmin*fRmin); }
  return fCubicVolume;
}

inline
G4double G4Torus::GetSurfaceArea()
{
  if(fSurfaceArea != 0.) {;}
  else
  { 
    fSurfaceArea = fDPhi*CLHEP::twopi*fRtor*(fRmax+fRmin);
    if(fDPhi < CLHEP::twopi)
    {
      fSurfaceArea = fSurfaceArea + CLHEP::twopi*(fRmax*fRmax-fRmin*fRmin);
    } 
  }
  return fSurfaceArea;
}
