//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
//
// 
// ------------------------------------------------------------
//      GEANT 4 class inline implementation
// ------------------------------------------------------------

// --------------------
// --- G4UnitDefinition
// --------------------

inline
const G4String& G4UnitDefinition::GetName() const
{
  return Name;
}

inline
const G4String& G4UnitDefinition::GetSymbol() const
{
  return SymbolName;
}

inline
G4double G4UnitDefinition::GetValue() const
{
  return Value;
}

// -------------------
// --- G4UnitsCategory
// -------------------

inline
const G4String& G4UnitsCategory::GetName() const
{
  return Name;
}
 
inline
G4UnitsContainer& G4UnitsCategory::GetUnitsList()
{
  return UnitsList;
}

inline
G4int G4UnitsCategory::GetNameMxLen() const
{
  return NameMxLen;
}

inline
G4int G4UnitsCategory::GetSymbMxLen() const
{
  return SymbMxLen;
}

inline
void G4UnitsCategory::UpdateNameMxLen(G4int len)
{
  if (NameMxLen<len) { NameMxLen=len; }
}

inline
void G4UnitsCategory::UpdateSymbMxLen(G4int len)
{
  if (SymbMxLen<len) { SymbMxLen=len; }
}

inline
G4double* G4BestUnit::GetValue()
{
  return Value;
}

inline
const G4String& G4BestUnit::GetCategory() const
{
  return Category;
}

inline
size_t G4BestUnit::GetIndexOfCategory() const
{
  return IndexOfCategory;
}
