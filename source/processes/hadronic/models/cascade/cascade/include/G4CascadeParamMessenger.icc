//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// G4CascadeParamMessenger.hh
// Function to define commands with relative paths instead of absolute
//
#ifndef G4CascadeParamMessenger_icc
#define G4CascadeParamMessenger_icc

#include "G4UIdirectory.hh"
#include "G4UIcommand.hh"


// Template argument must be subclass of G4UIcommand

template <class T>
T* G4CascadeParamMessenger::CreateCommand(const G4String& cmd,
					  const G4String& desc) {

  // If input name begins with '/', treat as absolute path
  G4String path;
  if (cmd[0] != '/' && cmdDir) path = cmdDir->GetCommandPath();
  path += cmd;

  T* theCmd = new T(path.c_str(), this);        // <T> must be G4UIcommand!
  theCmd->SetGuidance(desc.c_str());
  theCmd->AvailableForStates(G4State_PreInit,G4State_Idle);

  return theCmd;
}

#endif	/* G4CascadeParamMessenger_icc */
