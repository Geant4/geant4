# Macro file for the visualization setting in the initialization phase
# of the B1 example when running in interactive mode
#

# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
#/vis/open OGL 800x600-0+0 #600x600-0+0
# This is enough for a 2.5 keV electron
/vis/ogl/set/displayListLimit 10000000
#
# Use this open statement to create an OpenInventor view:
#/vis/open OI
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 5 -30
/vis/viewer/zoomTo 1.7
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories rich #smooth
#/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
#/vis/modeling/trajectories/drawByCharge-0/default/setTimeSliceInterval 1 s
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)

/vis/modeling/trajectories/create/drawByParticleID

/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts false
/vis/modeling/trajectories/drawByParticleID-0/default/setStepPtsSize 1

/vis/modeling/trajectories/drawByParticleID-0/set e- red
/vis/modeling/trajectories/drawByParticleID-0/set proton green
/vis/modeling/trajectories/drawByParticleID-0/set alpha green 
/vis/modeling/trajectories/drawByParticleID-0/set H green

/vis/modeling/trajectories/drawByParticleID-0/set OH magenta
/vis/modeling/trajectories/drawByParticleID-0/set H3O yellow
/vis/modeling/trajectories/drawByParticleID-0/set e_aq blue
/vis/modeling/trajectories/drawByParticleID-0/set H2O2 green
/vis/modeling/trajectories/drawByParticleID-0/set H white
/vis/modeling/trajectories/drawByParticleID-0/set H_2 white

/vis/modeling/trajectories/drawByParticleID-0/default/setTimeSliceInterval 0.1 ns

#/vis/modeling/trajectories/select drawByCharge-0

# Use to draw just selected types of radicals
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add e-
#/vis/filtering/trajectories/particleFilter-0/add e_aq

# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/default/setDrawStepPts true
# To select or override default colours (note: e+ is blue by default):
#/vis/modeling/trajectories/list
#/vis/modeling/trajectories/drawByParticleID-0/set e+ yellow
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Decorations
# Name
/vis/set/textColour green
/vis/set/textLayout right
# or, if your system does not support right-adjustment
#/vis/scene/add/text2D 0.9 -0.9 12 ! ! chem3
/vis/set/textLayout    # Revert to normal (left adjusted) layout
/vis/set/textColour    # Revert to default text colour (blue)
#
# Axes, scale, etc.
#/vis/scene/add/scale   # Simple scale line
#/vis/scene/add/eventID # Drawn at end of event
#/vis/scene/add/date    # Date stamp
#/vis/scene/add/logo2D  # Simple logo
#/vis/scene/add/logo    # 3D logo
#/vis/scene/add/axes -1 -1 -1 1 micrometer
#/vis/scene/add/axes 0 0 0 1 nm   # Simple axes: x=red, y=green, z=blue. # MODIF ------------------------
#
# Frame
#/vis/set/colour red
#/vis/set/lineWidth 2
#/vis/scene/add/frame   # Simple frame arond the view
/vis/set/colour        # Revert to default colour (white)
/vis/set/lineWidth     # Revert to default line width (1.)
#
# Attach text to one edge of Shape1, with a small, fixed offset
#/vis/scene/add/text 0 6 -4 cm 18 4 4 Shape1
# Attach text to one corner of Shape2, with a small, fixed offset
#/vis/scene/add/text 6 7 10 cm 18 4 4 Shape2
#
# To get nice view
#/vis/geometry/set/visibility World 0 true #changement
#/vis/geometry/set/visibility Envelope 0 false #changement
#/vis/viewer/set/style wireframe #surface
#/vis/viewer/set/hiddenMarker true
#/vis/viewer/set/viewpointThetaPhi 95 170
/vis/viewer/set/viewpointThetaPhi -70 0

#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush

/vis/set/textLayout centre
/vis/scene/add/scale
/vis/viewer/set/targetPoint 20 10 0 nm
/vis/viewer/set/background white

