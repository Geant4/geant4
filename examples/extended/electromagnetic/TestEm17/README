-------------------------------------------------------------------

     =========================================================
     Geant4 - an Object-Oriented Toolkit for Simulation in HEP
     =========================================================
 
                            TestEm17
                            --------
        This example is intended to check implementation of the processes 
        of muon interactions: ionization, direct (e+,e-) production,
	bremsstrahlung, mu-nuclear interaction.
	It allows to compute differential cross sections (as function of the
	energy transfered to secondaries), total cross sections and to compare
	with analytic calculations.
	
 1- GEOMETRY DEFINITION
 
 	It is a single box of homogeneous medium.
 	Two parameters define the geometry :
 	- the material of the box,
	- the (full) size of the box.
 	
 	The default geometry (1 m of Iron) is constructed in 
	DetectorConstruction, but the above parameters can be changed 
	interactively via the commands defined in DetectorMessenger.
 	
 2- PHYSICS LIST
 
 	The Physics List of the example uses the main physics constructor
        (builder) called "emstandard_opt0". As an alternative "local" 
        constructor is provided in which only a limited set 
        of physics processes are defined for muons, pions and proton:
        ionisation, bremsstrahlung and e+e- pair production. 

        Default energy range for EM processes in this example 
        is from 100*eV to 1000*PeV.

        Optionally "muNucl" builder may be added activating muon-nuclear 
        inelastic interaction.
	 	 
 3- AN EVENT : THE PRIMARY GENERATOR
 
 	The primary kinematic consists of a single particle starting at the edge
	of the box. The type of the particle and its energy are set in 
	PrimaryGeneratorAction (mu+ 10 TeV), and can be changed via the G4 
 	build-in commands of ParticleGun class (see the macros provided with 
 	this example).
 	
 4- PHYSICS
 
	The incident particle is a muon. During the tracking, secondary
	particles are killed.
	
	The number of interactions are plotted as a function of the energy 
	transfered to the secondaries.
	The total number of interactions is recorded, and the total cross 
        section computed from this.  

        At EndOfRun, the above results are compared with analytic calculations.
	The functions which compute the theoretical cross sections have been
	provided by the G4 MEPhI group, and grouped in MuCrossSections class.

 5- HISTOGRAMS
         
	The test contains built-in 1D histograms for muons filled during
        Monte Carlo simulation, which are managed by the HistoManager class 
        and its Messenger:

        1 Relative muon transferred energy distribution 
            (log10(eps/Emu kin) for knock-on electrons (ionization)
        2  -"- direct (e+,e-) pair production by muons
        3  -"- bremsstrahlung by muons
        4  -"- nuclear interaction by muons
        5  ionistion for hadrons
        6  (e+,e-) pair production by hadrons
        7  bremsstrahlung by hadrons

	The histos can be activated individually with the command :
	/testem/histo/setHisto id nbBins  valMin valMax : 
          min and max values of log10(eps/Emu kin).
	
	At EndOfRun the corresponding histos for analytic calculations are
	automatically created and filled (histo 11 to 14).
							  
 	One can control the name and the type of the histograms file with 
	the command:
 	/testem/histo/setFileName  name  (default testem17)
        	 				
 6- VISUALIZATION
 
 	The Visualization Manager is set in the main().
 	The initialisation of the drawing is done via the commands
 	/vis/... in the macro vis.mac. To get visualisation:
 	> /control/execute vis.mac
 	
 	The detector has a default view which is a longitudinal view of the 
 	box.
 	
 	The tracks are drawn at the end of event, and erased at the end of run.
	
 7- HOW TO START ?
 
	execute TestEm17 in 'batch' mode from macro files :
 		% TestEm17   allproc.mac
 		
	execute TestEm17 in 'interactive mode' with visualization :
 		% TestEm17
		Idle> control/execute vis.mac
 		....
 		Idle> type your commands
 		....
 		Idle> exit
